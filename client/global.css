@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /**
   * Tailwind CSS theme - AI Detect Adaptive Theme
   * tailwind.config.ts expects the following color variables to be expressed as HSL values.
   * A different format will require also updating the theme in tailwind.config.ts.
  */
  :root {
    /* Light theme - по умолчанию */
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 260 100% 60%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96%;
    --secondary-foreground: 222.2 84% 4.9%;

    --muted: 210 40% 96%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 260 100% 95%;
    --accent-foreground: 260 100% 20%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 260 100% 60%;

    --radius: 0.5rem;

    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 222.2 84% 4.9%;
    --sidebar-primary: 260 100% 60%;
    --sidebar-primary-foreground: 210 40% 98%;
    --sidebar-accent: 210 40% 96%;
    --sidebar-accent-foreground: 222.2 84% 4.9%;
    --sidebar-border: 214.3 31.8% 91.4%;
    --sidebar-ring: 260 100% 60%;

    /* Кастомные переменные для градиент��в */
    --gradient-from: 267 100% 97%;
    --gradient-via: 0 0% 98%;
    --gradient-to: 0 0% 100%;
  }

  .dark {
    --background: 240 10% 8%;
    --foreground: 0 0% 100%;

    --card: 240 10% 12%;
    --card-foreground: 0 0% 100%;

    --popover: 240 10% 12%;
    --popover-foreground: 0 0% 100%;

    --primary: 260 100% 70%;
    --primary-foreground: 0 0% 100%;

    --secondary: 240 10% 20%;
    --secondary-foreground: 0 0% 100%;

    --muted: 240 10% 20%;
    --muted-foreground: 240 5% 65%;

    --accent: 260 100% 70%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 240 10% 20%;
    --input: 240 10% 20%;
    --ring: 260 100% 70%;

    --sidebar-background: 240 10% 8%;
    --sidebar-foreground: 0 0% 100%;
    --sidebar-primary: 260 100% 70%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 10% 20%;
    --sidebar-accent-foreground: 0 0% 100%;
    --sidebar-border: 240 10% 20%;
    --sidebar-ring: 260 100% 70%;

    /* Кастомные переменные для темных градиентов */
    --gradient-from: 267 100% 15%;
    --gradient-via: 220 20% 10%;
    --gradient-to: 0 0% 0%;
  }

  .light {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 260 100% 60%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96%;
    --secondary-foreground: 222.2 84% 4.9%;

    --muted: 210 40% 96%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 260 100% 95%;
    --accent-foreground: 260 100% 20%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 260 100% 60%;

    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 222.2 84% 4.9%;
    --sidebar-primary: 260 100% 60%;
    --sidebar-primary-foreground: 210 40% 98%;
    --sidebar-accent: 210 40% 96%;
    --sidebar-accent-foreground: 222.2 84% 4.9%;
    --sidebar-border: 214.3 31.8% 91.4%;
    --sidebar-ring: 260 100% 60%;

    /* Кастомные переменные для светлых гр��д��ентов */
    --gradient-from: 267 100% 92%;
    --gradient-via: 220 20% 95%;
    --gradient-to: 0 0% 98%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}

@layer utilities {
  .perspective-1000 {
    perspective: 1000px;
  }

  .rotateX-12 {
    transform: rotateX(12deg);
  }

  .rotateY-12 {
    transform: rotateY(12deg);
  }

  .transform-3d {
    transform-style: preserve-3d;
  }

  .glow-cyan {
    box-shadow: 0 0 20px rgba(6, 182, 212, 0.8);
  }

  /* Адаптивные градиенты для тем */
  .theme-gradient {
    background: linear-gradient(
      to bottom right,
      hsl(var(--gradient-from)),
      hsl(var(--gradient-via)),
      hsl(var(--gradient-to))
    );
  }

  .theme-text {
    color: hsl(var(--foreground)) !important;
  }

  .theme-text-muted {
    color: hsl(var(--muted-foreground)) !important;
  }

  /* Адаптивные цвета для навигации */
  .theme-nav-text {
    color: hsl(var(--foreground) / 0.8) !important;
    transition: color 0.15s ease;
  }

  .theme-nav-text:hover {
    color: hsl(var(--foreground)) !important;
  }

  /* Адаптивные цвета для кнопок */
  .theme-button-text {
    color: hsl(var(--foreground) / 0.8) !important;
  }

  .theme-button-text:hover {
    color: hsl(var(--foreground)) !important;
  }

  /* Адаптивные цвета для лейблов форм */
  .theme-label {
    color: hsl(var(--foreground) / 0.8) !important;
  }

  /* Оптимизированная портальная анимация навбара */
  .portal-entrance {
    animation: portalEntry 1.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
    transform-origin: center center;
    will-change: transform, opacity, filter;
  }

  @keyframes portalEntry {
    0% {
      opacity: 0;
      transform: translateX(-50%) scale(0.3) rotateY(45deg);
      filter: blur(10px) brightness(2);
    }

    50% {
      opacity: 0.7;
      transform: translateX(-50%) scale(0.8) rotateY(10deg);
      filter: blur(3px) brightness(1.3);
    }

    100% {
      opacity: 1;
      transform: translateX(-50%) scale(1) rotateY(0deg);
      filter: blur(0px) brightness(1);
    }
  }

  /* Неоновое свечение для активного навбара */
  .neon-glow {
    position: relative;
    box-shadow:
      0 0 20px rgba(139, 69, 255, 0.3),
      0 0 40px rgba(139, 69, 255, 0.1),
      inset 0 0 10px rgba(139, 69, 255, 0.1);
  }

  /* Упрощённые частицы */
  .portal-particles {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 150%;
    height: 150%;
    transform: translate(-50%, -50%);
    pointer-events: none;
    z-index: -1;
  }

  .particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: rgba(139, 69, 255, 0.8);
    border-radius: 50%;
    animation: particleFloat 4s ease-in-out infinite;
    will-change: transform, opacity;
  }

  .particle:nth-child(1) {
    top: 15%;
    left: 25%;
    animation-delay: 0s;
  }
  .particle:nth-child(2) {
    top: 35%;
    left: 75%;
    animation-delay: 1s;
  }
  .particle:nth-child(3) {
    top: 65%;
    left: 15%;
    animation-delay: 2s;
  }
  .particle:nth-child(4) {
    top: 85%;
    left: 75%;
    animation-delay: 3s;
  }

  @keyframes particleFloat {
    0%,
    100% {
      opacity: 0.3;
      transform: translateY(0px) scale(0.8);
    }
    50% {
      opacity: 1;
      transform: translateY(-15px) scale(1);
    }
  }

  /* Пульсирующее неоновое свечение логотипа */
  .logo-pulse {
    animation: logoPulse 4s ease-in-out infinite;
  }

  @keyframes logoPulse {
    0%,
    100% {
      box-shadow: 0 0 20px rgba(147, 51, 234, 0.5);
    }
    50% {
      box-shadow: 0 0 30px rgba(147, 51, 234, 0.8);
    }
  }

  /* Мерцание текста */
  .text-flicker {
    animation: textFlicker 6s linear infinite;
  }

  @keyframes textFlicker {
    0%,
    98%,
    100% {
      text-shadow:
        0 0 5px rgba(139, 69, 255, 0.5),
        0 0 10px rgba(139, 69, 255, 0.3),
        0 0 15px rgba(139, 69, 255, 0.2);
    }
    1%,
    3%,
    97%,
    99% {
      text-shadow: none;
    }
  }

  /* Упрощённое энергетическое поле */
  .energy-field {
    position: absolute;
    top: -1px;
    left: -1px;
    right: -1px;
    bottom: -1px;
    background: rgba(139, 69, 255, 0.2);
    border-radius: 9999px;
    animation: energyPulse 4s ease-in-out infinite;
    z-index: -1;
    will-change: opacity;
  }

  @keyframes energyPulse {
    0%,
    100% {
      opacity: 0.2;
    }
    50% {
      opacity: 0.5;
    }
  }

  /* Голографическое мерцание */
  .holographic {
    position: relative;
    overflow: hidden;
  }

  .holographic::before {
    content: "";
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      45deg,
      transparent,
      rgba(139, 69, 255, 0.1),
      transparent
    );
    animation: hologramScan 4s linear infinite;
  }

  @keyframes hologramScan {
    0% {
      transform: translateX(-100%) translateY(-100%) rotate(45deg);
    }
    100% {
      transform: translateX(100%) translateY(100%) rotate(45deg);
    }
  }

  /* Адаптивные карточки */
  .theme-card {
    background: hsl(var(--card) / 0.05);
    border: 1px solid hsl(var(--border) / 0.1);
    backdrop-filter: blur(12px);
  }

  .theme-card-solid {
    background: hsl(var(--card));
    border: 1px solid hsl(var(--border));
  }

  /* Адаптивные кнопки */
  .theme-button-ghost {
    color: hsl(var(--foreground) / 0.8);
  }

  .theme-button-ghost:hover {
    background: hsl(var(--accent) / 0.1);
    color: hsl(var(--foreground));
  }

  /* Адаптивные инпуты */
  .theme-input {
    background: hsl(var(--background) / 0.05);
    border: 1px solid hsl(var(--border) / 0.2);
    color: hsl(var(--foreground));
  }

  .theme-input::placeholder {
    color: hsl(var(--muted-foreground) / 0.5);
  }

  /* Дропдаун меню */
  .theme-dropdown {
    background: hsl(var(--popover));
    border: 1px solid hsl(var(--border));
  }

  .theme-dropdown-item {
    color: hsl(var(--popover-foreground));
  }

  .theme-dropdown-item:hover {
    background: hsl(var(--accent));
    color: hsl(var(--accent-foreground));
  }

  /* Анимации для ценовых карточек */
  .pricing-card-enter {
    animation: pricingCardSlideUp 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94)
      forwards;
    opacity: 0;
    transform: translateY(30px) scale(0.95);
  }

  .pricing-card-enter:nth-child(1) {
    animation-delay: 0.1s;
  }

  .pricing-card-enter:nth-child(2) {
    animation-delay: 0.2s;
  }

  .pricing-card-enter:nth-child(3) {
    animation-delay: 0.3s;
  }

  @keyframes pricingCardSlideUp {
    0% {
      opacity: 0;
      transform: translateY(30px) scale(0.95);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  /* Светящиеся эффекты для кнопок */
  .glow-button {
    position: relative;
    overflow: hidden;
  }

  .glow-button::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.3),
      transparent
    );
    transition: left 0.5s;
  }

  .glow-button:hover::before {
    left: 100%;
  }

  /* Пульсирующие точки */
  .pulse-dot {
    animation: pulseDot 2s ease-in-out infinite;
  }

  @keyframes pulseDot {
    0%,
    100% {
      opacity: 0.6;
      transform: scale(1);
    }
    50% {
      opacity: 1;
      transform: scale(1.2);
    }
  }

  /* AI Hero Section Styles */
  .ai-hero-container {
    position: relative;
    background: linear-gradient(
      135deg,
      rgba(15, 15, 35, 1) 0%,
      rgba(25, 20, 60, 0.95) 30%,
      rgba(10, 10, 25, 1) 70%,
      rgba(5, 5, 15, 1) 100%
    );
    overflow: hidden;
  }

  .ai-hero-container::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background:
      radial-gradient(
        circle at 20% 30%,
        rgba(139, 69, 255, 0.2) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 80% 70%,
        rgba(59, 130, 246, 0.15) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 40% 80%,
        rgba(147, 51, 234, 0.1) 0%,
        transparent 50%
      );
    pointer-events: none;
    z-index: 1;
  }

  .neural-network {
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 2;
  }

  .neural-node {
    position: absolute;
    width: 8px;
    height: 8px;
    background: rgba(139, 69, 255, 0.8);
    border-radius: 50%;
    animation: neuralPulse 3s ease-in-out infinite;
  }

  .neural-node::before {
    content: "";
    position: absolute;
    top: -4px;
    left: -4px;
    width: 16px;
    height: 16px;
    border: 1px solid rgba(139, 69, 255, 0.3);
    border-radius: 50%;
    animation: neuralRing 3s ease-in-out infinite;
  }

  .neural-connection {
    position: absolute;
    height: 1px;
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba(139, 69, 255, 0.6) 20%,
      rgba(139, 69, 255, 0.8) 50%,
      rgba(139, 69, 255, 0.6) 80%,
      transparent 100%
    );
    animation: dataFlow 4s ease-in-out infinite;
  }

  .hologram-text {
    position: relative;
    background: linear-gradient(
      45deg,
      rgba(139, 69, 255, 1) 0%,
      rgba(59, 130, 246, 1) 50%,
      rgba(139, 69, 255, 1) 100%
    );
    background-size: 200% 200%;
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: hologramShift 4s ease-in-out infinite;
  }

  .data-stream {
    position: absolute;
    width: 2px;
    height: 100px;
    background: linear-gradient(
      to bottom,
      transparent 0%,
      rgba(139, 69, 255, 0.8) 50%,
      transparent 100%
    );
    animation: dataStreamFlow 3s linear infinite;
  }

  .ai-particles {
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 3;
  }

  .ai-particle {
    position: absolute;
    width: 3px;
    height: 3px;
    background: rgba(139, 69, 255, 0.8);
    border-radius: 50%;
    animation: particleFloat 6s ease-in-out infinite;
  }

  .circuit-pattern {
    position: absolute;
    width: 200px;
    height: 200px;
    border: 1px solid rgba(139, 69, 255, 0.2);
    border-radius: 4px;
    animation: circuitPulse 4s ease-in-out infinite;
  }

  .circuit-pattern::before,
  .circuit-pattern::after {
    content: "";
    position: absolute;
    background: rgba(139, 69, 255, 0.3);
  }

  .circuit-pattern::before {
    top: 50%;
    left: 0;
    width: 100%;
    height: 1px;
  }

  .circuit-pattern::after {
    top: 0;
    left: 50%;
    width: 1px;
    height: 100%;
  }

  /* Animations */
  @keyframes neuralPulse {
    0%,
    100% {
      opacity: 0.6;
      transform: scale(1);
    }
    50% {
      opacity: 1;
      transform: scale(1.5);
    }
  }

  @keyframes neuralRing {
    0%,
    100% {
      opacity: 0.3;
      transform: scale(1);
    }
    50% {
      opacity: 0.8;
      transform: scale(2);
    }
  }

  @keyframes dataFlow {
    0% {
      opacity: 0;
      transform: scaleX(0);
    }
    50% {
      opacity: 1;
      transform: scaleX(1);
    }
    100% {
      opacity: 0;
      transform: scaleX(0);
    }
  }

  @keyframes hologramShift {
    0%,
    100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }

  @keyframes dataStreamFlow {
    0% {
      transform: translateY(-100px);
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      transform: translateY(100px);
      opacity: 0;
    }
  }

  @keyframes particleFloat {
    0%,
    100% {
      opacity: 0.3;
      transform: translateY(0) rotate(0deg);
    }
    33% {
      opacity: 1;
      transform: translateY(-20px) rotate(120deg);
    }
    66% {
      opacity: 0.5;
      transform: translateY(-10px) rotate(240deg);
    }
  }

  @keyframes circuitPulse {
    0%,
    100% {
      opacity: 0.3;
      border-color: rgba(139, 69, 255, 0.2);
    }
    50% {
      opacity: 0.8;
      border-color: rgba(139, 69, 255, 0.6);
    }
  }

  /* Gravity Animation for Code Elements */
  .gravity-float {
    animation: gravityFloat 8s ease-in-out infinite;
  }

  @keyframes gravityFloat {
    0% {
      transform: translateY(0) rotate(0deg);
      opacity: 0.7;
    }
    25% {
      transform: translateY(-20px) rotate(2deg);
      opacity: 1;
    }
    50% {
      transform: translateY(10px) rotate(-1deg);
      opacity: 0.8;
    }
    75% {
      transform: translateY(-15px) rotate(1deg);
      opacity: 0.9;
    }
    100% {
      transform: translateY(0) rotate(0deg);
      opacity: 0.7;
    }
  }

  .gravity-bounce {
    animation: gravityBounce 6s ease-in-out infinite;
  }

  @keyframes gravityBounce {
    0%,
    100% {
      transform: translateY(0) scale(1);
      opacity: 0.6;
    }
    20% {
      transform: translateY(-30px) scale(1.05);
      opacity: 1;
    }
    40% {
      transform: translateY(5px) scale(0.98);
      opacity: 0.8;
    }
    60% {
      transform: translateY(-15px) scale(1.02);
      opacity: 0.9;
    }
    80% {
      transform: translateY(2px) scale(0.99);
      opacity: 0.7;
    }
  }

  .gravity-drift {
    animation: gravityDrift 10s ease-in-out infinite;
  }

  @keyframes gravityDrift {
    0% {
      transform: translateY(0) translateX(0) rotate(0deg);
      opacity: 0.5;
    }
    25% {
      transform: translateY(-25px) translateX(10px) rotate(3deg);
      opacity: 1;
    }
    50% {
      transform: translateY(15px) translateX(-5px) rotate(-2deg);
      opacity: 0.7;
    }
    75% {
      transform: translateY(-10px) translateX(8px) rotate(1deg);
      opacity: 0.9;
    }
    100% {
      transform: translateY(0) translateX(0) rotate(0deg);
      opacity: 0.5;
    }
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .neural-node {
      width: 6px;
      height: 6px;
    }

    .circuit-pattern {
      width: 100px;
      height: 100px;
    }

    .ai-particle {
      width: 2px;
      height: 2px;
    }

    @keyframes gravityFloat {
      0% {
        transform: translateY(0) rotate(0deg);
        opacity: 0.7;
      }
      25% {
        transform: translateY(-15px) rotate(1deg);
        opacity: 1;
      }
      50% {
        transform: translateY(8px) rotate(-0.5deg);
        opacity: 0.8;
      }
      75% {
        transform: translateY(-10px) rotate(0.5deg);
        opacity: 0.9;
      }
      100% {
        transform: translateY(0) rotate(0deg);
        opacity: 0.7;
      }
    }
  }
}
