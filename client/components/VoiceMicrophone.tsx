import React, { useRef, useState } from "react";
import { Button } from "@/components/ui/button";
import { Mic, MicOff, Volume2, VolumeX } from "lucide-react";
import { cn } from "@/lib/utils";
import { useVoiceRecognition } from "@/hooks/useVoiceRecognition";

interface VoiceMicrophoneProps {
  onCommand?: (command: string) => void;
  onTranscript?: (text: string) => void;
  className?: string;
  size?: "sm" | "md" | "lg";
  floating?: boolean;
}

export default function VoiceMicrophone({
  onCommand,
  onTranscript,
  className,
  size = "md",
  floating = true,
}: VoiceMicrophoneProps) {
  const [isPlayingAudio, setIsPlayingAudio] = useState(false);
  const audioRef = useRef<HTMLAudioElement | null>(null);

  // –ò—Å—Ç–æ—Ä–∏—è –º–æ–¥–µ–ª–µ–π –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "–≤–µ—Ä–Ω–∏ –º–æ–¥–µ–ª—å"
  const modelHistoryRef = useRef<string[]>([
    "https://cdn.builder.io/o/assets%2F4349887fbc264ef3847731359e547c4f%2F14cdeb74660b46e6b8c349fa5339f8ae?alt=media&token=fa99e259-7582-4df0-9a1e-b9bf6cb20289&apiKey=4349887fbc264ef3847731359e547c4f"
  ]); // –ò–∑–Ω–∞—á–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å

  const { isListening, transcript, isSupported, toggleListening } = useVoiceRecognition({
    onTranscript: (text) => {
      console.log("üìù –ü–æ–ª—É—á–µ–Ω —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç:", text);
      onTranscript?.(text);
    },
    onCommand: (command) => {
      console.log("üéØ –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞:", command);
      handleCommand(command);
      onCommand?.(command);
    },
  });

  // –§—É–Ω–∫—Ü–∏—è —Å–º–µ–Ω—ã –º–æ–¥–µ–ª–∏ —á–µ—Ä–µ–∑ CustomEvent
  const changeModel = (newModelUrl: string) => {
    console.log("üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ —Å–º–µ–Ω—ã –º–æ–¥–µ–ª–∏:", newModelUrl);

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –º–æ–¥–µ–ª—å –≤ –∏—Å—Ç–æ—Ä–∏—é
    modelHistoryRef.current.push(newModelUrl);
    console.log("üìù –ò—Å—Ç–æ—Ä–∏—è –º–æ–¥–µ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∞:", modelHistoryRef.current);

    const event = new CustomEvent("changeModel", {
      detail: { newModelUrl }
    });
    window.dispatchEvent(event);
  };

  // –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –º–æ–¥–µ–ª–∏
  const revertToPreviousModel = () => {
    if (modelHistoryRef.current.length <= 1) {
      console.log("‚ö†Ô∏è –ù–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –º–æ–¥–µ–ª–µ–π –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞");
      return;
    }

    // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é –º–æ–¥–µ–ª—å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π
    modelHistoryRef.current.pop();
    const previousModelUrl = modelHistoryRef.current[modelHistoryRef.current.length - 1];

    console.log("‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –º–æ–¥–µ–ª–∏:", previousModelUrl);
    console.log("üìù –ò—Å—Ç–æ—Ä–∏—è –º–æ–¥–µ–ª–µ–π –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞:", modelHistoryRef.current);

    const event = new CustomEvent("changeModel", {
      detail: { newModelUrl: previousModelUrl }
    });
    window.dispatchEvent(event);
  };

  // –§—É–Ω–∫—Ü–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ —Å –∫–æ–ª–±—ç–∫–æ–º
  const playAudioWithCallback = (audioUrl: string, callback?: () => void) => {
    if (isPlayingAudio) {
      console.log("‚è∏Ô∏è –ê—É–¥–∏–æ —É–∂–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è");
      return;
    }

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∞—É–¥–∏–æ –µ—Å–ª–∏ –µ—Å—Ç—å
    if (audioRef.current) {
      audioRef.current.pause();
      audioRef.current.currentTime = 0;
    }

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –Ω–∞ –≤—Ä–µ–º—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ
    const wasListening = isListening;
    if (isListening) {
      toggleListening(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω
    }

    setIsPlayingAudio(true);
    console.log("üîä –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∞—É–¥–∏–æ —Å –∫–æ–ª–±—ç–∫–æ–º, –º–∏–∫—Ä–æ—Ñ–æ–Ω –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");

    const audio = new Audio(audioUrl);
    audioRef.current = audio;

    audio.onended = () => {
      setIsPlayingAudio(false);
      audioRef.current = null;
      console.log("‚úÖ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–ª–±—ç–∫");

      // –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–ª–±—ç–∫ –µ—Å–ª–∏ –µ—Å—Ç—å
      if (callback) {
        callback();
      }

      // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ –∞–∫—Ç–∏–≤–Ω–æ
      if (wasListening) {
        setTimeout(() => {
          toggleListening(); // –í–∫–ª—é—á–∞–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω –æ–±—Ä–∞—Ç–Ω–æ
          console.log("üé§ –ú–∏–∫—Ä–æ—Ñ–æ–Ω –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –∞—É–¥–∏–æ");
        }, 500);
      }
    };

    audio.onerror = () => {
      setIsPlayingAudio(false);
      audioRef.current = null;
      console.error("‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ");

      // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –µ—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞
      if (wasListening) {
        setTimeout(() => {
          toggleListening(); // –í–∫–ª—é—á–∞–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω –æÔøΩÔøΩ—Ä–∞—Ç–Ω–æ
          console.log("üé§ –ú–∏–∫—Ä–æ—Ñ–æ–Ω –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ –∞—É–¥–∏–æ");
        }, 500);
      }
    };

    audio.play().catch((error) => {
      setIsPlayingAudio(false);
      audioRef.current = null;
      console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∞—É–¥–∏–æ:", error);

      // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏
      if (wasListening) {
        setTimeout(() => {
          toggleListening(); // –í–∫–ª—é—á–∞–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω –æ–±—Ä–∞—Ç–Ω–æ
          console.log("üé§ –ú–∏–∫—Ä–æ—Ñ–æ–Ω –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è");
        }, 500);
      }
    });
  };

  // –§—É–Ω–∫—Ü–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ (–ø—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è)
  const playAudio = (audioUrl: string) => {
    if (isPlayingAudio) {
      console.log("‚è∏Ô∏è –ê—É–¥–∏–æ —É–∂–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è");
      return;
    }

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∞—É–¥–∏–æ –µ—Å–ª–∏ –µ—Å—Ç—å
    if (audioRef.current) {
      audioRef.current.pause();
      audioRef.current.currentTime = 0;
    }

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –Ω–∞ –≤—Ä–µ–º—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ
    const wasListening = isListening;
    if (isListening) {
      toggleListening(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω
    }

    setIsPlayingAudio(true);
    console.log("üîä –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∞—É–¥–∏–æ, –º–∏–∫—Ä–æ—Ñ–æ–Ω –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");

    const audio = new Audio(audioUrl);
    audioRef.current = audio;

    audio.onended = () => {
      setIsPlayingAudio(false);
      audioRef.current = null;
      console.log("‚úÖ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ");

      // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ –∞–∫—Ç–∏–≤–Ω–æ
      if (wasListening) {
        setTimeout(() => {
          toggleListening(); // –í–∫–ª—é—á–∞–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω –æ–±—Ä–∞—Ç–Ω–æ
          console.log("üé§ –ú–∏–∫—Ä–æ—Ñ–æ–Ω –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –∞—É–¥–∏–æ");
        }, 500);
      }
    };

    audio.onerror = () => {
      setIsPlayingAudio(false);
      audioRef.current = null;
      console.error("‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ");

      // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –µ—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞
      if (wasListening) {
        setTimeout(() => {
          toggleListening(); // –í–∫–ª—é—á–∞–µ–º –º–∏–∫ÔøΩÔøΩ–æ—Ñ–æ–Ω –æ–±—Ä–∞—Ç–Ω–æ
          console.log("üé§ –ú–∏–∫—Ä–æ—Ñ–æ–Ω –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ –∞—É–¥–∏–æ");
        }, 500);
      }
    };

    audio.play().catch((error) => {
      setIsPlayingAudio(false);
      audioRef.current = null;
      console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∞—É–¥–∏–æ:", error);

      // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏
      if (wasListening) {
        setTimeout(() => {
          toggleListening(); // –í–∫–ª—é—á–∞–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω –æ–±—Ä–∞—Ç–Ω–æ
          console.log("üé§ –ú–∏–∫—Ä–æ—Ñ–æ–Ω –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è");
        }, 500);
      }
    });
  };

  const handleCommand = (command: string) => {
    const lowerCommand = command.toLowerCase();

    // –ö–æ–º–∞–Ω–¥–∞ "–î–∂–∞—Ä–≤–∏—Å —Ç—ã —Ç—É—Ç" - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞—É–¥–∏–æ –æ—Ç–≤–µ—Ç
    if (lowerCommand.includes("–¥–∂–∞—Ä–≤–∏—Å —Ç—ã —Ç—É—Ç") || lowerCommand.includes("jarvis —Ç—ã —Ç—É—Ç")) {
      console.log("üéØ –ö–æ–º–∞–Ω–¥–∞ '–î–∂–∞—Ä–≤–∏—Å —Ç—ã —Ç—É—Ç' –ø–æ–ª—É—á–µ–Ω–∞ - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞—É–¥–∏–æ –æ—Ç–≤–µ—Ç");
      playAudio("https://cdn.builder.io/o/assets%2Fe61c233aecf6402a8a9db34e2dc8f046%2F88f169fa15c74679b0cef82d12ee5f8d?alt=media&token=287c51bf-45be-420b-bd4f-8bdcb60d393c&apiKey=e61c233aecf6402a8a9db34e2dc8f046");
      return;
    }

    // –ö–æ–º–∞–Ω–¥–∞ "–î–∂–∞—Ä–≤–∏—Å —Å–º–µ–Ω–∏ –º–æ–¥–µ–ª—å" - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞—É–¥–∏–æ –∏ –º–µ–Ω—è–µ–º –º–æ–¥–µ–ª—å
    if (lowerCommand.includes("–¥–∂–∞—Ä–≤–∏—Å —Å–º–µ–Ω–∏ –º–æ–¥–µ–ª—å") || lowerCommand.includes("jarvis —Å–º–µ–Ω–∏ –º–æ–¥–µ–ª—å")) {
      console.log("üéØ –ö–æ–º–∞–Ω–¥–∞ '–î–∂–∞—Ä–≤–∏—Å —Å–º–µ–Ω–∏ –º–æ–¥–µ–ª—å' –ø–æ–ª—É—á–µ–Ω–∞ - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞—É–¥–∏–æ –∏ –º–µ–Ω—è–µ–º –º–æ–¥–µ–ª—å");

      // –°–Ω–∞—á–∞–ª–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞—É–¥–∏–æ –æ—Ç–≤–µ—Ç
      playAudioWithCallback(
        "https://cdn.builder.io/o/assets%2Fe61c233aecf6402a8a9db34e2dc8f046%2F91df3aea397c4fbba9b49e597b4e2cb6?alt=media&token=522412d9-5f3a-454f-851c-dd4228a39931&apiKey=e61c233aecf6402a8a9db34e2dc8f046",
        () => {
          // –ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞—É–¥–∏–æ –º–µ–Ω—è–µ–º –º–æ–¥–µ–ª—å
          console.log("üîÑ –°–º–µ–Ω–∞ –º–æ–¥–µ–ª–∏ –ø–æ—Å–ª–µ –∞—É–¥–∏–æ –æ—Ç–≤–µ—Ç–∞");
          changeModel("https://cdn.builder.io/o/assets%2Fe61c233aecf6402a8a9db34e2dc8f046%2F1357ace3fa8347cfa6f565692cad1fb7?alt=media&token=ebe4c351-faec-46fe-9b11-d9c4e4881670&apiKey=e61c233aecf6402a8a9db34e2dc8f046");
        }
      );
      return;
    }

    // –ö–æ–º–∞–Ω–¥–∞ "–≤–µ—Ä–Ω–∏ –º–æ–¥–µ–ª—å" - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞—É–¥–∏–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –º–æ–¥–µ–ª—å
    if (lowerCommand.includes("–≤–µ—Ä–Ω–∏ –º–æ–¥–µ–ª—å") || lowerCommand.includes("–≤–µ—Ä–Ω–∏ –º–æ–¥–µ–ª")) {
      console.log("üéØ –ö–æ–º–∞–Ω–¥–∞ '–≤–µ—Ä–Ω–∏ –º–æ–¥–µ–ª—å' –ø–æ–ª—É—á–µ–Ω–∞ - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞—É–¥–∏–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –º–æ–¥–µ–ª—å");

      // –°–Ω–∞—á–∞–ª–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞—É–¥–∏–æ –æ—Ç–≤–µ—Ç
      playAudioWithCallback(
        "https://cdn.builder.io/o/assets%2Fe61c233aecf6402a8a9db34e2dc8f046%2F2562e9998e1d4afc90ded9608258444e?alt=media&token=1786dd2e-6e68-4c76-93fe-77066a4a2ecf&apiKey=e61c233aecf6402a8a9db34e2dc8f046",
        () => {
          // –ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞—É–¥–∏–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –º–æ–¥–µ–ª—å
          console.log("‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –º–æ–¥–µ–ª–∏ –ø–æ—Å–ª–µ –∞—É–¥–∏–æ –æ—Ç–≤–µ—Ç–∞");
          revertToPreviousModel();
        }
      );
      return;
    }

    // –ö–æ–º–∞–Ω–¥–∞ "—Å–ø–∞—Å–∏–±–æ –¥–∂–∞—Ä–≤–∏—Å" - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞—É–¥–∏–æ –æ—Ç–≤–µ—Ç
    if (lowerCommand.includes("—Å–ø–∞—Å–∏–±–æ –¥–∂–∞—Ä–≤–∏—Å") || lowerCommand.includes("—Å–ø–∞—ÅÔøΩÔøΩ–±–æ jarvis")) {
      console.log("üéØ –ö–æ–º–∞–Ω–¥–∞ '—Å–ø–∞—Å–∏–±–æ –¥–∂–∞—Ä–≤–∏—Å' –ø–æ–ª—É—á–µ–Ω–∞ - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞—É–¥–∏–æ –æ—Ç–≤–µ—Ç");
      playAudio("https://cdn.builder.io/o/assets%2Fe61c233aecf6402a8a9db34e2dc8f046%2Fec5bfbae691b41d9b374b39e75694179?alt=media&token=75301093-1e6e-469a-a492-3105aee95cc9&apiKey=e61c233aecf6402a8a9db34e2dc8f046");
      return;
    }

    // –ü—Ä–æ—Å—Ç—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    if (lowerCommand.includes("–ø—Ä–∏–≤–µ—Ç") || lowerCommand.includes("–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π")) {
      console.log("üëã –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–ª—É—á–µ–Ω–∞");
    } else if (lowerCommand.includes("—Å–ø–∞—Å–∏–±–æ") || lowerCommand.includes("–±–ª–∞–≥–æ–¥–∞—Ä—é")) {
      console.log("üôè –ö–æ–º–∞–Ω–¥–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–∞");
    } else if (lowerCommand.includes("–ø–æ–º–æ—â—å") || lowerCommand.includes("help")) {
      console.log("‚ùì –ó–∞–ø—Ä–æ—Å –ø–æ–º–æ—â–∏ –ø–æ–ª—É—á–µ–Ω");
    }
  };

  if (!isSupported) {
    return (
      <div className={cn("text-sm text-gray-500", className)}>
        –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —ç—Ç–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
      </div>
    );
  }

  const sizeClasses = {
    sm: "w-10 h-10",
    md: "w-12 h-12", 
    lg: "w-16 h-16"
  };

  const iconSizes = {
    sm: "w-4 h-4",
    md: "w-5 h-5",
    lg: "w-7 h-7"
  };

  if (floating) {
    return (
      <div className={cn("fixed bottom-6 right-6 z-50", className)}>
        <div className="flex flex-col items-center gap-3">
          {/* –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç */}
          {transcript && (
            <div className="bg-slate-900/90 backdrop-blur-sm text-white px-4 py-2 rounded-lg text-sm max-w-xs border border-slate-700/50 shadow-lg">
              <div className="flex items-center gap-2 mb-1">
                <Volume2 className="w-3 h-3 text-blue-400" />
                <span className="text-xs text-blue-400 font-medium">–†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ:</span>
              </div>
              <div className="text-white/90">{transcript}</div>
            </div>
          )}
          
          {/* –ö–Ω–æ–ø–∫–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ */}
          <Button
            onClick={toggleListening}
            size="lg"
            className={cn(
              sizeClasses[size],
              "rounded-full shadow-lg transition-all duration-200 border-2",
              isListening
                ? "bg-red-500 hover:bg-red-600 text-white border-red-400 animate-pulse shadow-red-500/30"
                : "bg-blue-600 hover:bg-blue-700 text-white border-blue-400 shadow-blue-500/30"
            )}
          >
            {isListening ? (
              <MicOff className={iconSizes[size]} />
            ) : (
              <Mic className={iconSizes[size]} />
            )}
          </Button>
          
          {/* –°—Ç–∞—Ç—É—Å */}
          <div className="text-xs text-center">
            {isPlayingAudio ? (
              <div className="flex items-center gap-1 text-green-400">
                <Volume2 className="w-3 h-3 animate-pulse" />
                <span>–ì–æ–≤–æ—Ä—é...</span>
              </div>
            ) : isListening ? (
              <div className="flex items-center gap-1 text-red-400">
                <div className="w-2 h-2 bg-red-400 rounded-full animate-pulse" />
                <span>–°–ª—É—à–∞—é...</span>
              </div>
            ) : (
              <div className="text-slate-400">–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∑–∞–ø–∏—Å–∏</div>
            )}
          </div>
        </div>
      </div>
    );
  }

  // –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º
  return (
    <div className={cn("flex items-center gap-3", className)}>
      {/* –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π) */}
      {transcript && (
        <div className="flex-1 bg-slate-800/50 border border-slate-600/30 rounded-lg px-3 py-2 text-sm text-white/90 max-w-xs">
          {transcript}
        </div>
      )}

      {/* –°—Ç–∞—Ç—É—Å –∞—É–¥–∏–æ (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π) */}
      {isPlayingAudio && (
        <div className="flex items-center gap-1 text-green-400 text-xs">
          <Volume2 className="w-3 h-3 animate-pulse" />
          <span>–ì–æ–≤–æ—Ä—é...</span>
        </div>
      )}

      {/* –ö–Ω–æ–ø–∫–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ (–≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è) */}
      <Button
        onClick={toggleListening}
        variant="outline"
        size="sm"
        disabled={isPlayingAudio}
        className={cn(
          sizeClasses[size],
          "rounded-xl transition-all duration-200",
          isPlayingAudio
            ? "bg-green-500/20 border-green-500/50 text-green-400"
            : isListening
            ? "bg-red-500/20 border-red-500/50 text-red-400 hover:bg-red-500/30"
            : "border-blue-400/30 bg-slate-800/50 text-blue-400 hover:bg-blue-500/20"
        )}
      >
        {isPlayingAudio ? (
          <Volume2 className={iconSizes[size]} />
        ) : isListening ? (
          <MicOff className={iconSizes[size]} />
        ) : (
          <Mic className={iconSizes[size]} />
        )}
      </Button>
    </div>
  );
}
