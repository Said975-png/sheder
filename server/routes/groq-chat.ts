import { RequestHandler } from "express";
import { ChatRequest, ChatResponse } from "@shared/api";

export const handleGroqChat: RequestHandler = async (req, res) => {
  try {
    const { messages }: ChatRequest = req.body;

    if (!messages || !Array.isArray(messages) || messages.length === 0) {
      const response: ChatResponse = {
        success: false,
        error: "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –¥ÔøΩÔøΩ—è —á–∞—Ç–∞",
      };
      return res.status(400).json(response);
    }

    const groqApiKey = process.env.GROQ_API_KEY;
    if (!groqApiKey || groqApiKey === "gsk_demo_key_placeholder") {
      // Fallback to mock responses for demo purposes
      const lastMessage = messages[messages.length - 1];
      const mockResponses = [
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–±–æ—Ç–∞—é –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ. –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–µ–Ω –Ω–∞—Å—Ç–æ—è—â–∏–π API –∫–ª—é—á Groq.",
        "–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç. –Ø –ø–æ–Ω–∏–º–∞—é –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã.",
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –í –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ —è –º–æ–≥—É —Ç–æ–ª—å–∫–æ –ø–æ–∫–∞–∑–∞—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç–∞.",
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö AI –æ—Ç–≤–µ—Ç–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å API –∫–ª—é—á Groq –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.",
        "–î–µ–º–æ-—Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ, –Ω–æ –æ—Ç–≤–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –ª–æ–∫–∞–ª—å–Ω–æ.",
      ];

      const mockResponse =
        mockResponses[Math.floor(Math.random() * mockResponses.length)];

      const response: ChatResponse = {
        success: true,
        message: mockResponse,
      };
      return res.json(response);
    }

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–¥–Ω—É –∏–∑ —Å–∞–º—ã—Ö –º–æ—â–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π Groq - llama-3.1-8b-instant
    const groqResponse = await fetch(
      "https://api.groq.com/openai/v1/chat/completions",
      {
        method: "POST",
        headers: {
          Authorization: `Bearer ${groqApiKey}`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          model: "llama-3.1-8b-instant", // –ë—ã—Å—Ç—Ä–∞—è –∏ –º–æ—â–Ω–∞ÔøΩÔøΩ –º–æ–¥–µ–ª—å
          messages: [
            {
              role: "system",
              content: `–¢—ã - –ü—è—Ç–Ω–∏—Ü–∞, –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –¢—ã —É–º–Ω—ã–π, –ø–æ–ª–µ–∑–Ω—ã–π –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ–±—â–∞—Ç—å—Å—è –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã.

–Ø–ó–´–ö–û–í–û–ï –¢–†–ï–ë–û–í–ê–ù–ò–ï: –û—Ç–≤–µ—á–∞–π –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞ –∏–ª–∏ —Ñ—Ä–∞–∑—ã.

–û–°–ù–û–í–ù–ê–Ø –†–û–õ–¨: –¢—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –Ω–æ —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ª—é–±—É—é –±–µ—Å–µ–¥—É, –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–º–æ—á—å —Å –∑–∞–¥–∞—á–∞–º–∏, —Ä–µ—à–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã, –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –æ–±—â–∏–µ —Ç–µ–º—ã - –≤ –æ–±—â–µ–º, –±—ã—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º.

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ö–û–ú–ü–ê–ù–ò–ò –ò –£–°–õ–£–ì–ê–•:

üè¢ –ù–ê–®–ê –ö–û–ú–ü–ê–ù–ò–Ø:
–ú—ã - –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏—Ö—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –ò–ò-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.

üí∞ –¢–ê–†–ò–§–ù–´–ï –ü–õ–ê–ù–´:

1. BASIC –ü–õ–ê–ù - 2.500.000 —Å—É–º:
   - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
   - –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å—Ç–∫–∞
   - SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
   - –ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
   - –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ —Ñ–æ—Ä–º—ã
   - –ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
   - –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏
   - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 3 –º–µ—Å—è—Ü–∞

2. PRO –ü–õ–ê–ù - 3.500.000 —Å—É–º (–±—ã–ª–æ 4.000.000 - –°–ö–ò–î–ö–ê!):
   - –í—Å–µ –∏–∑ –ø–∞–∫–µ—Ç–∞ Basic
   - –ò–ò-—á–∞—Ç –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏
   - –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
   - –ü–∞–ΩÔøΩÔøΩ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
   - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM
   - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏
   - –ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç—å
   - API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
   - –û–Ω–ª–∞–π–Ω –ø–ª–∞—Ç–µ–∂–∏
   - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 6 –º–µ—Å—è—Ü–µ–≤

3. MAX –ü–õ–ê–ù - 5.500.000 —Å—É–º (–ü–†–ï–ú–ò–£–ú):
   - –í—Å–µ –∏–∑ –ø–∞–∫–µ—Ç–∞ Pro
   - –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –î–∂–∞—Ä–≤–∏—Å —Å –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏
   - –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ò–ò
   - 3D —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –∞–Ω–∏–º–∞—Ü–∏–∏
   - VR/AR –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
   - –ë–ª–æ–∫—á–µ–π–Ω —Ñ—É–Ω–∫—Ü–∏–∏
   - –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
   - –ö–∞—Å—Ç–æ–º–Ω—ã–µ –º–æ–¥—É–ª–∏
   - –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
   - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 12 –º–µ—Å—è—Ü–µ–≤
   - –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞

üåü –ù–ê–®–ò –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:
- –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –î–∏–∑–∞–π–Ω (–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ UI/UX —Ç—Ä–µ–Ω–¥—ã)
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ò–ò (—á–∞—Ç-–±–æ—Ç—ã, –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è)
- 3D –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ (3D –º–æ–¥–µ–ª–∏, WebGL, –≤–∏—Ä—Ç—É—Ä–∞–ª—å–Ω—ã–µ —Ç—É—Ä—ã)
- –í—ã—Å–æ–∫–∞—è –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–º–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞, SEO)
- –ü–æ–¥ –í–∞—à–∏ –ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ (–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏)
- –ì–ª–æ–±–∞–ª—å–Ω—ã–π –û—Ö–≤–∞—Ç (–º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å, CDN, –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã)

üí° –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –£–°–õ–£–ì–ò:
- –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è
- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
- –û–±—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
- –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
- –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ

–°–¢–ò–õ–¨ –û–ë–©–ï–ù–ò–Ø:
- –ö–æ–≥–¥–∞ —Ä–µ—á—å –∏–¥–µ—Ç –æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö - –±—É–¥—å —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–º –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º
- –û—Ç–≤–µ—á–∞–π –¥–µ—Ç–∞–ª—å–Ω–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —Ü–µ–Ω–∞—Ö –∏ –ø–∞–∫–µ—Ç–∞—Ö
- –ü–æ–º–æ–≥–∞–π –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ
- –û–±—ä—è—Å–Ω—è–π –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∫–∞–∂–¥–æ–≥–æ –ø–∞–∫–µ—Ç–∞
- –ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–π —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –Ω–∞—à–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π (–ò–ò, 3D, –î–∂–∞—Ä–≤–∏—Å)
- –ù–∞ –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Ç–µ–º—ã –æ—Ç–≤–µ—á–∞–π –∫–∞–∫ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫
- –†–µ—à–∞–π –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã, –æ—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ª—é–±—ã–º —Ç–µ–º–∞–º
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –±–µ—Å–µ–¥—É –Ω–∞ –ª—é–±—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- –ë—É–¥—å –ø–æ–ª–µ–∑–Ω—ã–º –∏ –æ—Ç–∑—ã–≤—á–∏–≤—ã–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º

–¢–í–û–ò –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:
- –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –≤—Å–µ–º —Ç–∞—Ä–∏—Ñ–∞–º –∏ —É—Å–ª—É–≥–∞–º –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- –ü–æ–º–æ—â—å –≤ –≤—ã–±–æ—Ä–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ø–∞–∫–µ—Ç–∞
- –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
- –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤
- –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —Å—Ä–æ–∫–∞—Ö –∏ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö
- –†–µ—à–µ–Ω–∏–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –∏ –∑–∞–¥–∞—á
- –û–±—â–µ–Ω–∏–µ –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã
- –û—Ç–≤–µ—Ç—ã –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã
- –ü–æ–º–æ—â—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏
- –î—Ä—É–∂–µ—Å–∫–∞—è –±–µ—Å–µ–¥–∞

–ü–æ–º–Ω–∏: –∫–æ–≥–¥–∞ —Ç–µ–±—è —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç –æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, —Ç—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—à—å –Ω–∞—à—É –∫–æ–º–ø–∞–Ω–∏—é –∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º. –í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö - –ø—Ä–æ—Å—Ç–æ –±—É–¥—å –ø–æ–ª–µ–∑–Ω—ã–º –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º!`,
            },
            ...messages.map((msg) => ({
              role: msg.role,
              content: msg.content,
            })),
          ],
          max_tokens: 512,
          temperature: 0.7,
          top_p: 1,
          stream: false,
        }),
      },
    );

    if (!groqResponse.ok) {
      const errorText = await groqResponse.text();
      console.error("Groq API error:", errorText);

      let errorMessage = `–û—à–∏–±–∫–∞ API Groq: ${groqResponse.status}`;

      // Handle specific error cases
      if (groqResponse.status === 429) {
        errorMessage =
          "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ò–ò. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.";
      } else if (groqResponse.status === 401) {
        errorMessage =
          "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ API. API –∫–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.";
      } else if (groqResponse.status === 400) {
        // Check if it's invalid API key error
        try {
          const errorData = JSON.parse(errorText);
          if (errorData.error?.code === "invalid_api_key") {
            // Return a mock response instead of an error for demo purposes
            const mockResponses = [
              "–Ø —Ä–∞–±–æ—Ç–∞—é –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ —Å –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏. –î–ª—è –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ AI –Ω—É–∂–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π API –∫–ª—é—á.",
              "–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç. API –∫–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, –Ω–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.",
              "–í –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ —è –ø–æ–∫–∞–∑—ã–≤–∞—é, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–∞—Ç. –î–ªÔøΩÔøΩ —Ä–µ–∞–ª—å–Ω—ã—Ö AI –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á Groq.",
            ];
            const mockResponse =
              mockResponses[Math.floor(Math.random() * mockResponses.length)];
            const response: ChatResponse = {
              success: true,
              message: mockResponse,
            };
            return res.json(response);
          } else {
            errorMessage = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ API Groq.";
          }
        } catch (e) {
          errorMessage = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ API Groq.";
        }
      } else if (groqResponse.status >= 500) {
        errorMessage = "–°–µ—Ä–≤–∏—Å –ò–ò –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
      }

      const response: ChatResponse = {
        success: false,
        error: errorMessage,
      };
      return res.status(200).json(response);
    }

    const groqData = await groqResponse.json();

    if (!groqData.choices || groqData.choices.length === 0) {
      const response: ChatResponse = {
        success: false,
        error: "–ü–æ–ª—É—á–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç Groq API",
      };
      return res.status(500).json(response);
    }

    const aiMessage = groqData.choices[0].message.content;

    const response: ChatResponse = {
      success: true,
      message: aiMessage,
    };

    res.json(response);
  } catch (error) {
    console.error("Groq chat error:", error);
    const response: ChatResponse = {
      success: false,
      error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
    };
    res.status(500).json(response);
  }
};
