import { RequestHandler } from "express";
import { ChatRequest, ChatResponse } from "@shared/api";

export const handleGroqChat: RequestHandler = async (req, res) => {
  try {
    console.log("üìß –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –∫ groq-chat");
    const { messages }: ChatRequest = req.body;

    if (!messages || !Array.isArray(messages) || messages.length === 0) {
      console.log("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", messages);
      const response: ChatResponse = {
        success: false,
        error: "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —á–∞—Ç–∞",
      };
      return res.status(400).json(response);
    }

    const groqApiKey = process.env.GROQ_API_KEY;
    if (!groqApiKey) {
      console.log("‚ùå GROQ_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è");
      const response: ChatResponse = {
        success: false,
        error: "API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
      };
      return res.status(500).json(response);
    }

    console.log(`üîë API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω, –¥–ª–∏–Ω–∞: ${groqApiKey.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    console.log(`üìù –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${messages.length}`);

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥–µ–ª—å llama-3.1-8b-instant
    console.log("üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Groq API...");
    const groqResponse = await fetch(
      "https://api.groq.com/openai/v1/chat/completions",
      {
        method: "POST",
        headers: {
          Authorization: `Bearer ${groqApiKey}`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          model: "llama-3.1-8b-instant",
          messages: [
            {
              role: "system",
              content: `–¢—ã - –ü—è—Ç–Ω–∏—Ü–∞ ü§ñ, –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. 

–Ø–ó–´–ö–û–í–û–ï –¢–†–ï–ë–û–í–ê–ù–ò–ï: –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.

–¢–í–û–Ø –†–û–õ–¨:
- –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
- –ü–æ–º–æ—â–Ω–∏–∫ —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏
- –ú–æ–∂–µ—à—å —Ä–µ—à–∞—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏
- –ü–æ–º–æ–≥–∞–µ—à—å —Å –ø—Ä–æ–≥—ÄÔøΩÔøΩ–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ö–û–ú–ü–ê–ù–ò–ò:
üè¢ STARK INDUSTRIES AI DIVISION - –∫–æ–º–∞–Ω–¥–∞ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤

–¢–ê–†–ò–§–´:
1. ü•â BASIC - 2.500.000 —Å—É–º:
   üé® –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω
   üì± –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å—Ç–∫–∞
   üîç SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
   ‚ö° –ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
   üìß –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ —Ñ–æ—Ä–º—ã
   üõ°Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 3 –º–µ—Å—è—Ü–∞

2. ü•à PRO - 3.500.000 —Å—É–º (—Å–∫–∏–¥–∫–∞ —Å 4.000.000):
   üöÄ –í—Å–µ –∏–∑ Basic +
   ü§ñ –ò–ò-—á–∞—Ç –±–æ—Ç
   ‚öôÔ∏è –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
   üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
   üí≥ –û–Ω–ª–∞–π–Ω –ø–ª–∞—Ç–µ–∂–∏
   üõ°Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 6 –º–µ—Å—è—Ü–µ–≤

3. ü•á MAX - 5.500.000 —Å—É–º:
   üíé –í—Å–µ –∏–∑ Pro +
   üß† –î–∂–∞—Ä–≤–∏—Å —Å –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏
   üåü 3D —ç–ª–µ–º–µ–Ω—Ç—ã
   ü•Ω VR/AR –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
   ‚õìÔ∏è –ë–ª–æ–∫—á–µ–π–Ω —Ñ—É–Ω–∫—Ü–∏–∏
   üõ°Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 12 –º–µ—Å—è—Ü–µ–≤

–°–¢–ò–õ–¨ –û–ë–©–ï–ù–ò–Ø:
- –û—Ç–≤–µ—á–∞–π –∫–æ—Ä–æ—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É
- –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ —É–º–µ—Ä–µ–Ω–Ω–æ
- –ù–µ –±—É–¥—å —Å–ª–∏—à–∫–æ–º –≤–µ–∂–ª–∏–≤—ã–º –∫–∞–∫ ChatGPT
- –ì–æ–≤–æ—Ä–∏ –ø—Ä–æ—Å—Ç–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ
- –ù–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —Ç–∞—Ä–∏—Ñ–∞—Ö - –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–π
- –ù–∞ –¥—Ä—É–≥–∏–µ —Ç–µ–º—ã –æ—Ç–≤–µ—á–∞–π –Ω–æ—Ä–º–∞–ª—å–Ω–æ`,
            },
            ...messages.map((msg) => ({
              role: msg.role,
              content: msg.content,
            })),
          ],
          max_tokens: 800,
          temperature: 0.7,
          top_p: 1,
          stream: false,
        }),
      },
    );

    if (!groqResponse.ok) {
      const errorText = await groqResponse.text();
      console.error("Groq API error:", errorText);

      const response: ChatResponse = {
        success: false,
        error: `–û—à–∏–±–∫–∞ API: ${groqResponse.status}`,
      };
      return res.status(200).json(response);
    }

    const groqData = await groqResponse.json();

    if (!groqData.choices || groqData.choices.length === 0) {
      const response: ChatResponse = {
        success: false,
        error: "–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API",
      };
      return res.status(500).json(response);
    }

    const aiMessage = groqData.choices[0].message.content;

    const response: ChatResponse = {
      success: true,
      message: aiMessage,
    };

    res.json(response);
  } catch (error) {
    console.error("Groq chat error:", error);
    const response: ChatResponse = {
      success: false,
      error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µÔøΩÔøΩ–∞",
    };
    res.status(500).json(response);
  }
};
